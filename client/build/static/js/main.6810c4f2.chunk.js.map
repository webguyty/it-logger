{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["getLogs","dispatch","a","setLoading","fetch","res","json","data","type","payload","response","statusText","connect","searchLogs","text","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","required","htmlFor","onClick","deleteLog","method","setCurrent","log","href","attention","message","_id","slice","tech","format","date","M","toast","html","Preloader","state","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","TechListModal","propType","PropTypes","object","isRequired","func","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6810c4f2.chunk.js","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SEARCH_LOGS,\n} from './types';\n\n// Get logs from server\nexport const getLogs = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n//  Add new log\nexport const addLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.message });\n  }\n};\n\n// Delete log from server\nexport const deleteLog = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await fetch(`api/logs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// // Update log from server\nexport const updateLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/api/logs/${log._id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.message });\n  }\n};\n\n// Search server logs\nexport const searchLogs = (text) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch(`api/logs/search/${text}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Set Current Log\nexport const setCurrent = (log) => {\n  return {\n    type: SET_CURRENT,\n    payload: log,\n  };\n};\n\n// Clear current log\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';\n","import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { searchLogs, getLogs } from '../../actions/logActions';\n\nconst SearchBar = ({ searchLogs, getLogs }) => {\n  const text = useRef('');\n\n  const onChange = (e) => {\n    if (text.current.value === '') {\n      getLogs();\n    } else {\n      searchLogs(text.current.value);\n    }\n  };\n\n  const onClose = (e) => {\n    text.current.value = '';\n    getLogs();\n  };\n\n  return (\n    <nav style={{ marginBottom: '30px' }} className='blue'>\n      <div className='nav-wrapper'>\n        <form>\n          <div className='input-field'>\n            <input\n              id='search'\n              type='search'\n              placeholder='Search Logs..'\n              ref={text}\n              onChange={onChange}\n              required\n            />\n            <label className='label-icon' htmlFor='search'>\n              <i className='material-icons'>search</i>\n            </label>\n            <i className='material-icons' onClick={onClose}>\n              close\n            </i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nSearchBar.propTypes = {\n  searchLogs: PropTypes.func.isRequired,\n  getLogs: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { searchLogs, getLogs })(SearchBar);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteLog, setCurrent } from '../../actions/logActions';\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log._id);\n    M.toast({ html: 'Log Deleted' });\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        <a\n          href='#edit-log-modal'\n          className={`modal-trigger ${\n            log.attention ? 'red-text' : 'blue-text'\n          }`}\n          onClick={() => setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className='grey-text'>\n          <span className='black-text'>ID #{log._id.slice(-7)}</span> last\n          updated by <span className='black-text'>{log.tech}</span> on{' '}\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\n        </span>\n        <a href='#!' className='secondary-content' onClick={onDelete}>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\n","import React from 'react';\n\nconst Preloader = () => {\n  return (\n    <div className='progress blue lighten-4'>\n      <div className='indeterminate blue'></div>\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <Preloader></Preloader>;\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className='center'>No logs to show...</p>\n      ) : (\n        logs.map((log) => <LogItem log={log} key={log._id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  log: state.log,\n});\n\nexport default connect(mapStateToProps, { getLogs })(Logs);\n","import React from 'react';\n\nconst AddBtn = () => {\n  return (\n    <div className='fixed-action-btn'>\n      <a\n        href='#add-log-modal'\n        className='btn-floating btn-large blue darken-2 modal-trigger'\n      >\n        <i className='large material-icons'>add</i>\n      </a>\n      <ul>\n        <li>\n          <a\n            href='#tech-list-modal'\n            className='btn-floating green modal-trigger'\n          >\n            <i className='material-icons'>person</i>\n          </a>\n        </li>\n        <li>\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\n            <i className='material-icons'>person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n} from './types';\n\n// Get techs from Server\nexport const getTechs = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/api/techs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Add technician to server\nexport const addTech = (tech) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/api/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_TECH,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Delete tech from Server\nexport const deleteTech = (id) => async (dispatch) => {\n  try {\n    setLoading();\n    await fetch(`/api/techs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Set Loading\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map((t) => (\n      <option key={t._id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ tech: state.tech });\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n","import React, { useState } from 'react';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addLog } from '../../actions/logActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and tech' });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      addLog(newLog);\n\n      M.toast({ html: `Log added by ${tech}` });\n\n      // Clear all fields\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='add-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <label htmlFor='message' className='active'>\n              Log message\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect waves-light blue btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired,\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%',\n};\n\nexport default connect(null, { addLog })(AddLogModal);\n","import React, { useState, useEffect } from 'react';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { updateLog } from '../../actions/logActions';\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and tech' });\n    } else {\n      const updLog = {\n        _id: current._id,\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      updateLog(updLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // Clear Fields\n      setMessage('');\n      setTech('');\n      // setAttention('');\n    }\n  };\n\n  return (\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect waves-light blue btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%',\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  current: state.log.current,\n});\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTech } from '../../actions/techActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const onSubmit = () => {\n    if (firstName === '' || lastName === '') {\n      M.toast({ html: 'Please enter the first and last name' });\n    } else {\n      addTech({ firstName, lastName });\n\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\n\n      // Clear Fields\n      setFirstName('');\n      setLastName('');\n    }\n  };\n\n  return (\n    <div id='add-tech-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>New Technician</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='firstName'\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <label htmlFor='firstName' className='active'>\n              First Name\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='lastName'\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <label htmlFor='lastName' className='active'>\n              Last Name\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect waves-light blue btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addTech })(AddTechModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteTech } from '../../actions/techActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TechItem = ({ tech, deleteTech }) => {\n  // const TechItem = ({ tech }) => {\n  const onDelete = () => {\n    M.toast({ html: 'Technician Deleted' });\n    deleteTech(tech._id);\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        {tech.firstName} {tech.lastName}\n        <a href='#!' className='secondary-content' onClick={onDelete}>\n          {' '}\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteTech })(TechItem);\n// export default connect(null, {})(TechItem);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TechItem from './TechItem';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id='tech-list-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>Technician List</h4>\n        <ul className='collection'>\n          {!loading &&\n            techs !== null &&\n            techs.map((tech) => <TechItem tech={tech} key={tech._id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propType = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SEARCH_LOGS,\n} from '../actions/types';\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter((log) => log._id !== action.payload),\n        loading: false,\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map((log) =>\n          log._id === action.payload._id ? action.payload : log\n        ),\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false,\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false,\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter((tech) => tech._id !== action.payload),\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport logReducer from './logReducer';\nimport techReducer from './techReducer';\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { useEffect, Fragment } from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}